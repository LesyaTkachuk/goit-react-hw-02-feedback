{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","feedbacks","Object","keys","className","styles","wrapper","map","feedback","type","key","onClick","button","Section","title","children","section","Statistics","props","good","neutral","bad","total","positivePercentage","statistics","defaultProps","Notification","message","App","state","updateFeedbacksCount","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","goodValue","totalValue","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,gBCAtED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,qBCA7DD,EAAOC,QAAU,CAAC,WAAa,iC,qLC+BhBC,MA5Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAYC,OAAOC,KAAKJ,GAE9B,OACE,yBAAKK,UAAWC,IAAOC,SACpBL,EAAUM,KAAI,SAACC,GAAD,OACb,4BACEC,KAAK,SACLC,IAAKF,EACLG,QAAS,kBAAMX,EAAgBQ,IAC/BJ,UAAWC,IAAOO,QAEjBJ,Q,gBCEIK,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,6BAASX,UAAWC,IAAOW,SACxBF,GAAS,wBAAIV,UAAWC,IAAOS,OAAQA,GACvCC,I,gBCJP,SAASE,EAAWC,GAAQ,IAClBC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACE,yBAAKnB,UAAWC,IAAOmB,YACrB,oCAAUL,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,MAKNN,EAAWQ,aAAe,CACxBH,MAAO,EACPC,mBAAoB,GAWPN,QC3Bf,SAASS,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,2BAAIA,GAGbD,EAAaD,aAAe,CAC1BE,QAAS,qBAOID,QC6CAE,E,4MArDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,qBAAuB,SAACtB,GACtB,EAAKuB,UAAS,SAACC,GAAD,sBACXxB,EAAWwB,EAAUxB,GAAY,O,EAItCyB,mBAAqB,kBACnB/B,OAAOgC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEhEC,gCAAkC,SAACC,EAAWC,GAAZ,OAChCC,KAAKC,MAAOH,EAAYC,EAAc,M,uDAE9B,IAAD,EACwBG,KAAKd,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQqB,KAAKV,qBACbV,EAAqBoB,KAAKL,gCAC9BnB,EACAG,GAGF,OACE,oCACE,kBAAC,EAAD,CAASR,MAAM,yBACb,kBAAC,EAAD,CACEf,QAAS4C,KAAKd,MACd7B,gBAAiB2C,KAAKb,wBAG1B,kBAAC,EAAD,CAAShB,MAAM,cACZQ,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcT,MAAM,4B,GA9Cd8B,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a1c71998.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__1-3kk\",\"button\":\"FeedbackOptions_button__22Ech\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2XO5P\",\"title\":\"Section_title__yjTXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__22AZg\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.scss\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const feedbacks = Object.keys(options);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {feedbacks.map((feedback) => (\r\n        <button\r\n          type=\"button\"\r\n          key={feedback}\r\n          onClick={() => onLeaveFeedback(feedback)}\r\n          className={styles.button}\r\n        >\r\n          {feedback}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.scss\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.scss\";\r\n\r\nfunction Statistics(props) {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <div className={styles.statistics}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: \"No feedback given\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./Section/Section\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  updateFeedbacksCount = (feedback) => {\r\n    this.setState((prevState) => ({\r\n      [feedback]: prevState[feedback] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n\r\n  countPositiveFeedbackPercentage = (goodValue, totalValue) =>\r\n    Math.round((goodValue / totalValue) * 100);\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage(\r\n      good,\r\n      total\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.updateFeedbacksCount}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification title=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./assets/base.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}